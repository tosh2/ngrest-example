// This file generated by ngrestcg
// For more information, please visit: https://github.com/loentar/ngrest

#include "apis.h"

//  Esta lista almacenara todos los estudiantes
Lista *listadoEstudiantes = new Lista();

/*
    Metodo declarado en la clase apis, inserta la info de un estudiante a la lista
    recibe una serializacion 'estudianteSerial' que es una serializacion del
    'struct estudiante' definido en el archivo 'nodo.h' y se copia la informacion
    al listadoEstudiantes
*/
std::string apis::insertarEstudiante(estudianteSerial estudiante){
  std::string response = "Estudiante Agregado Exitosamente";

  struct estudiante nuevoEstudiante;

  nuevoEstudiante.id = estudiante.id;
  nuevoEstudiante.nombre = estudiante.nombre;

  listadoEstudiantes->insertar(nuevoEstudiante);

  return response;
}


//  Metodo declarado en la clase apis, busca un estudiante en la lista, recibe un id (implementar)
std::string apis::getEstudiante(const std::string& id){
  std::string response = "El estudiante buscado es: " + id;
  return response;
}

/*
    Metodo declarado en la clase apis, serializa toda la lista de estudiantes, NO podemos enviar
    la lista de estudiantes o la estructura como tal, debemos serializarla
*/
std::list<estudianteSerial> apis::getEstudiantes(){

  Nodo *pivote = listadoEstudiantes->raiz;

  std::list<estudianteSerial> response;

  while(pivote){
    estudianteSerial tmp;
    tmp.id      = pivote->estudiante.id;
    tmp.nombre  = pivote->estudiante.nombre;
    response.push_back(tmp);
    pivote = pivote->getSiguiente();
  }

  return response;
}
